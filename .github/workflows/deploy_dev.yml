name: "Deploy dev"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  landing_filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.landing_filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: landing_filter
        with:
          filters: |
            workflows:
              - 'landing/**'
  denta_filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.denta_filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: denta_filter
        with:
          filters: |
            workflows:
              - 'denta/**'

  apps_filter:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.apps_filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: apps_filter
        with:
          filters: |
            workflows:
              - 'apps/**'

  run_pull:
    name: run pull
    runs-on: ubuntu-latest
    needs: [landing_filter, denta_filter, apps_filter]
    steps:
      - name: install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.DEV_SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && git stash && git checkout ${{ vars.DEV_BRANCH }} && git pull"

      - name: stop containers -- 0 pack
        if: needs.landing_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose down landing_roll_over"
      - name: build and run containers -- 0 pack
        if: needs.landing_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose up -d --build landing_roll_over"
      - name: stop containers -- 1 pack
        if: needs.landing_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose down landing_roll_over_1"
      - name: build and run containers -- 1 pack
        if: needs.landing_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose up -d --build landing_roll_over_1"

      - name: stop containers -- preview_generator
        if: needs.apps_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose down preview_generator"
      - name: build and run containers -- preview_generator
        if: needs.apps_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose up -d --build preview_generator"

      - name: stop containers -- denta -- 0 pack
        if: needs.denta_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose down denta_roll_over"
      - name: build and run containers -- denta -- 0 pack
        if: needs.denta_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose up -d --build denta_roll_over"
      - name: stop containers -- denta -- 1 pack
        if: needs.denta_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose down denta_roll_over_1"
      - name: build and run containers -- denta -- 1 pack
        if: needs.denta_filter.outputs.output1 == 'true'
        run: ssh ${{ vars.DEV_SSH_USER }}@${{ vars.DEV_SSH_HOST }} "cd ${{ vars.DEV_DIR }} && docker-compose up -d --build denta_roll_over_1"
